#!/usr/bin/env bash

USAGE_MSG="\nBOOTSTRAP WILL RECONFIGURE YOUR SYSTEM!!  USE WITH CAUTION!!\n\nUsage: sudo bootstrap_base <username> --proceed"

# This script is for bootstrapping new systems.
# To use: 
#   scp bootstrap_base new_system:
#   ssh new_system
#   sudo bootstrap_base <username> --proceed
#
# The username can be an existing user or a new (deploy) user

# ----- check command-line parameters -----
[ $# == 2 ] || { echo -e $USAGE_MSG ; exit 1 ; }
[ $2 == "--proceed" ] || { echo -e $USAGE_MSG ; exit 1 ; }

# ----- core variables -----
export BOOTSTRAP_USER=$1
export BOOTSTRAP_HOME="/home/$BOOTSTRAP_USER"

# ----- starting the bootstrap... -----
echo "======================================================="
echo "Starting bootstrap for $BOOTSTRAP_USER at $BOOTSTRAP_HOME on `hostname`"
date

echo "======================================================="
echo "Installing support utilities"
sudo apt-get update -y -qq
sudo apt-get install git-core -y -qq
sudo apt-get install python-software-properties -y -qq

echo "======================================================="
echo "Adding apt repository for custom debs..."
APT_DIR=""
[ -d /apt ] && APT_DIR="/apt"
[ -d $BOOTSTRAP_HOME/data/apt ] && APT_DIR="$BOOTSTRAP_HOME/data/apt"
if [ "$APT_DIR" == "" ] 
then
  APT_URL="http://apt.alt55.com"
  echo "deb $APT_URL ./" > /etc/apt/sources.list.d/r210.list
  /usr/bin/curl $APT_URL/pub/gpg.key | /usr/bin/apt-key add -
else
  echo "deb file:$APT_DIR ./" > /etc/apt/sources.list.d/r210.list
  $APT_DIR/pub/add_key.sh
fi

echo "======================================================="
echo "add brightbox repository"
# see http://wiki.brightbox.co.uk/docs:ruby-ng
# this is for the brightbox ruby packages
# only add the repo if it is not already installed...
CMD="sudo apt-add-repository ppa:brightbox/ruby-ng"
ls /etc/apt/sources.list.d/brightbox* &> /dev/null || $CMD

echo "======================================================="
echo "Running apt-get update..."
sudo apt-get update -y -qq

echo "======================================================="
echo "Install puppet..."
if [ -f /usr/bin/puppet ]
then
  echo "Puppet is already installed..."
else
  echo "Installing Ruby 1.9.3..."
  sudo apt-get install ruby1.9.3 -y -qq
  echo "Installing Pupppet..."
  wget http://apt.puppetlabs.com/puppetlabs-release-precise.deb
  sudo dpkg -i puppetlabs-release-precise.deb
  sudo apt-get update
  sudo apt-get install puppet -y -qq
fi

echo "======================================================="
echo "Create puppet group"
if ! cat /etc/group | grep -q "puppet"
  then addgroup puppet 
fi

echo "======================================================="
echo "Setting up util directories..."
cd $BOOTSTRAP_HOME
mkdir -p util; cd util
if [ -d base_util ]
then
  cd base_util
  git pull
  cd ..
else
  git clone git://github.com/andyl/base_util.git
fi
base_util/init

echo "======================================================="
echo "Setting up puppet directories..."
cd $BOOTSTRAP_HOME
mkdir -p data
cd data
if [ -d puppet ] 
then
  cd puppet
  git pull
  cd ..
else
  git clone git://github.com/andyl/puppet.git
fi
sudo puppet/init $BOOTSTRAP_HOME

echo "======================================================="
echo "Running puppet configurator..."
cd $BOOTSTRAP_HOME
if [ -f .puppet/manifests/bootstrap.pp ] ; then
  sudo puppet apply .puppet/manifests/bootstrap.pp 
else
  echo "-----------------------------------------------------"
  echo "WARNING: .puppet/manifests/bootstrap.pp NOT FOUND"
  echo "-----------------------------------------------------"
fi

echo "======================================================="
echo "Setting file ownership"
sudo chown -R $BOOTSTRAP_USER $BOOTSTRAP_HOME
sudo chgrp -R $BOOTSTRAP_USER $BOOTSTRAP_HOME

echo "======================================================="
echo "setting up RBENV"
sudo apt-get install -y -q rbenv-base rbenv193p194 rbenv200p0
# create local .rbenv for BOOTSTRAP_USER
su - $BOOTSTRAP_USER -c "rbenv_setup" 
su - $BOOTSTRAP_USER -c "rbenv global 1.9.3-p194"
su - $BOOTSTRAP_USER -c "rbenv rehash" 

echo "======================================================="
echo "Loading utility gems"
bindir=$BOOTSTRAP_HOME/util/base_util/bin
su - $BOOTSTRAP_USER -c "rbenv rehash"
su - $BOOTSTRAP_USER -c "cd $bindir && bundle --quiet"
su - $BOOTSTRAP_USER -c "rbenv rehash"

echo "======================================================="
echo "Finished bootstrap for $BOOTSTRAP_USER at $BOOTSTRAP_HOME on `hostname`"
date
echo ""
