#!/usr/bin/env ruby

# add hbytes and hmatch methods class String
class String

  HPOWERS = { 'K' => 3, 'M' => 6, 'G' => 9 }.freeze

  def hbytes
    return 0 if self.empty?
    sub(/([KMG])/) {|m| '0' * HPOWERS[m]}.sub(/\..*/) {|m| m[1..-2]}.to_i
  end

  def hmatch
    gsub(',', '.').upcase[/(\d+(\.\d)?[KMG]|\d\d+)/, 1] || ''
  end
end

# add hsort - sort by human-readable sizes
class Array
  def hsort
    sort_by {|line| line.hmatch.hbytes}
  end
end

def execute(ele, code)
  puts ele.instance_eval(&code)
rescue Errno::EPIPE
  exit
end

single_line = ARGV[0] == '-l'
expr = ARGV.drop(single_line ? 1 : 0).join(' ')
code = eval("Proc.new { #{expr} }")
single_line ? STDIN.each { |l| execute(l.chomp, code) } : execute(STDIN.readlines, code)
