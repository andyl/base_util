*wlog* *worklog* Worklog
==============================================================================
Contents:                                                        *wlog-outline*

  Introduction  |wlog-intro|
  Outlines      |wlog-outlines|
  Mappings      |wlog-mappings|
  Commands      |wlog-commands|
  Toolbar       |wlog-toolbar|
  Settings      |wlog-settings|

==============================================================================
Introduction:                                                      *wlog-intro*

Getting Things Done in Vim

==============================================================================
Outlines in wlog:                                                *wlog-outlines*

wlog uses Vim's |folding| capabilities to provide an outlining capability
similar to that of familiar outliners:

- folded headlines hide all sub-headlines

- text blocks fold separately so you can see the first line under its
  corresponding headline.

A wlog outline consists of:

- Headings -- Text with 0 or more tabs preceding it. These are by default
  displayed in color, and logically include text and headings that are more
  indented. If the tabs are immediately followed by a '+' character, then that
  heading will be extracted along with the text when you do a \T
  |wlog-<LocalLeader>T|.

- Plain text -- Text preceded by 0 or more tabs and the '|' character.

- File links -- File names enclosed in square brackets like [README.otl]. You
  can navigate to these files

- Vim tags -- Regular vim tags (which use a |tags| file), enclosed in square
  brackets like [wlog-outlines]. If you have |Thlnk| installed, these can also
  use its style of tags.

- Viki tags -- If you have |viki| installed, these will also be navigable.

- Vim command tags -- Vim |commands| enclosed in square brackets with a leading
  colon, like [:he tags]

You can choose at what level headings become hidden.

You can choose to fold all the headings and see just text blocks with their
immediately enclosing headings.

==============================================================================
Mappings:                                                       *wlog-mappings*

Standard Vim keystrokes redefined:

Some little-used Vim commands have been re-defined for
convenience in wlog:

  =       open heading (zo) |zo|                                       *wlog-=*
  -       close heading (zc) |zc|                                      *wlog--*

Standard Vim keystrokes that work slightly differently in wlog:

Some commands have been enhanced for wlog, mostly to deal
with the differences between headlines and text blocks:

  g<C-]>                                                          *wlog-g<C-]>*
  g<LeftMouse>                                              *wlog-g<LeftMouse>*
  <C-]>     tag jump                                               *wlog-<C-]>*

  g<RightMouse>                                            *wlog-g<RightMouse>*
  <C-RightMouse>                                          *wlog-<C-RightMouse>*
  <C-T>     tag return                                             *wlog-<C-T>*

  J         join lines                                                 *wlog-J*
  o         open line below                                            *wlog-o*
  O         open line above                                            *wlog-O*

Fold operations:                                                 *wlog-folding*

Read the Vim manual about folding |fold-commands|

Outliner macro mappings:                                          *wlog-macros*

Note that the mappings shown here as \x are really using the local leader
character, which can be changed to whatever you want using the
|maplocalleader| command.

Display operations:

  \1      show level 1                                    *wlog-<LocalLeader>1*
  \2      show level 2                                    *wlog-<LocalLeader>2*
  \3      show level 3                                    *wlog-<LocalLeader>3*
  \4      show level 4                                    *wlog-<LocalLeader>4*
  \5      show level 5                                    *wlog-<LocalLeader>5*
  \6      show level 6                                    *wlog-<LocalLeader>6*
  \7      show level 7                                    *wlog-<LocalLeader>7*
  \8      show level 8                                    *wlog-<LocalLeader>8*
  \9      show level 9                                    *wlog-<LocalLeader>9*
  \a      show all levels and text                        *wlog-<LocalLeader>a*
  \t      toggles showing just the first line of text     *wlog-<LocalLeader>t*

Heading operations:

All of these that change text operate on a heading and all its text and
subheadings.

  \u      move heading up one                             *wlog-<LocalLeader>u*
  \d      move heading down one                           *wlog-<LocalLeader>d*
  \C      change the current heading                      *wlog-<LocalLeader>C*
  \D      delete the current heading                      *wlog-<LocalLeader>D*
  \y      yank the current heading                        *wlog-<LocalLeader>y*
  \p      insert yanked/deleted heading after the current line  *wlog-<LocalLeader>p*
  \P      insert yanked/deleted heading before the current line *wlog-<LocalLeader>P*
  \>      shift current heading right (demote)            *wlog-<LocalLeader>>*
  <Shift-Tab>  shift current heading right (demote)       *wlog-<Shift-Tab>*
  \<      shift current heading left (promote)            *wlog-<LocalLeader><*
  <Tab>   shift current heading left (promote)            *wlog-<Tab>*
  -       close current heading
  =       open current heading

Motion:

  \k      move cursor up one heading                      *wlog-<LocalLeader>k*
  \j      move cursor down one heading                    *wlog-<LocalLeader>j*
  \[      move cursor to top of fold                      *wlog-<LocalLeader>[*
  \]      move cursor to bottom of fold                   *wlog-<LocalLeader>]*

Miscellaneous:

  \T      extract text to new window                      *wlog-<LocalLeader>T*
  \H      extract headers to new window                   *wlog-<LocalLeader>H*
  \b      convert heading to text or back                 *wlog-<LocalLeader>b*
  \h      toggle bold headers display                     *wlog-<LocalLeader>h*
  \f      format current fold                             *wlog-<LocalLeader>f*
  \F      format current fold after joining all lines     *wlog-<LocalLeader>F*
  \w      count words in text blocks                      *wlog-<LocalLeader>w*

Switching modes:

These let you switch between entering text and entering headers.
If the cursor is on a header line, these make a new text line, or if the
cursor is on a text line, these make a new header.

  <C-CR>  toggle mode and insert line after current               *wlog-<C-CR>*
  \o      toggle mode and insert line after current       *wlog-<LocalLeader>o*
  \O      toggle mode and insert line before current      *wlog-<LocalLeader>O*

==============================================================================
Word-compatible level changing:                       *wlog-word-compatibility*

  Alt-shift-down          shift heading down one              *wlog-<M-S-Down>*
  Alt-shift-up            shift heading up one                  *wlog-<M-S-Up>*
  Alt-down                move cursor down one heading          *wlog-<M-Down>*
  Alt-up                  move cursor up one heading              *wlog-<M-Up>*
  Alt-shift-Left          promote current heading             *wlog-<M-S-Left>*
  Alt-shift-Right         demote current heading             *wlog-<M-S-Right>*
  Alt-shift-keyboardPlus  open current fold                  *wlog-<M-S-kPlus>*
  Alt-shift-keyboardMinus close current fold                *wlog-<M-S-kMinus>*

==============================================================================
Mouse Operation:                                                   *wlog-mouse*

A double-click on a heading will toggle its folded state.

==============================================================================
Commands:                                                       *wlog-commands*

  :OtlJoin   takes range of lines and joins them

==============================================================================
Toolbar:                                                         *wlog-toolbar*

If you are using the toolbar, some buttons have been added:

Left, right: promote or demote the current heading (\< and \>)
Convert to body text
Up, down: move the current heading up or down
+, - : expand or collapse the current heading
1 - 7: show the corresponding level (\1 - \7)
All: show all levels plus text (\t)

==============================================================================
Settings:                                                     *wlog-settings*

These can be set in your .vimrc file to change the default behavior of wlog:

Turn off bold headers (useful if you find the colors too dark in a color
terminal):
  let g:otl_bold_headers = 0

Don't install wlog menu:
  let g:otl_install_menu = 0

Don't install wlog toolbar buttons:
  let g:otl_install_toolbar = 0

Don't install any wlog keyboard mappings:
  let g:no_otl_maps = 1

Install wlog mapping of <Tab> and <Shift-Tab> to demote/promote (default=0):
  let g:otl_map_tabs = 1

Don't install wlog insert mode mappings:
  let g:no_otl_insert_maps = 1

Start out in text view:
  let g:otl_text_view = 1

Set default initial foldlevel (default=9)
Note that you can override this in a modeline in an .otl file
  let g:otl_initial_foldlevel=9

If you have installed Viki:

  Set g:otl_use_viki to 0 if Viki is installed but you don't want to use it
    let g:otl_use_viki=1

  Set g:otl_viki_name_types to the default Viki name types that you want to use
  (see viki.txt)
    s Simple viki name
    c CamelCase
    S simple, quoted viki name
    i interviki
    u URL

    let otl_viki_name_types='csSeui'

    let otl_viki_anchor_marker='#'

    let otl_viki_comment_string='.*\[\[%s]]'

Don't use |thlnk| even if it exists:
  let g:otl_use_thlnk = 0

Change the key prefix for wlog mappings |wlog-mappings| (in this example, to a comma):
  let maplocalleader = ","

" vim: ft=help tw=78 ts=2 et
