---
- name: chruby | get package
  sudo: no
  get_url:
    url:  https://github.com/postmodern/chruby/archive/v{{chruby_version}}.tar.gz
    dest: /tmp/chruby-{{chruby_version}}.tar.gz
    force: no

- name: chruby | untar package
  sudo: no
  shell: tar -xzf /tmp/chruby-{{chruby_version}}.tar.gz chdir=/tmp creates=/tmp/chruby-{{chruby_version}}

- name: chruby | install
  sudo: yes
  command: make install chdir=/tmp/chruby-{{chruby_version}} creates=/usr/local/share/chruby/chruby.sh
 
- name:  chruby | install rubies
  sudo:  no
  shell: chruby_ROOT={{chruby_root}} {{chruby_cmd}} install {{item}} creates={{chruby_vers}}/{{item}}
  with_items: chruby_rubies

# - name:  chruby | set global ruby to ${global_ruby}
#   shell: chruby_ROOT={{chruby_root}} {{chruby_cmd}} global {{chruby_global}}
#   changed_when: false
# 
# - name:  chruby | create chruby_init from template
#   template: src=chruby_init dest=/home/{{rem_user}}/.chruby_init
# 
# - name:  chruby | get .bashrc filetype
#   stat: path=/home/{{rem_user}}/.bashrc 
#   register: bashrc_filetype
#   changed_when: false
# 
# - name:  chruby | set chruby path in .bashrc
#   lineinfile: state=present dest=/home/{{rem_user}}/.bashrc regexp="^export PATH=" line='export PATH="$HOME/.chruby/bin:$PATH"'
#   when: bashrc_filetype.stat.isreg 
# 
# - name:  chruby | source .chruby-init in .bashrc
#   lineinfile: state=present dest=/home/{{rem_user}}/.bashrc regexp="^source .HOME/.chruby_init" line='source $HOME/.chruby_init'
#   when: bashrc_filetype.stat.isreg 
# 
# - name: chruby | comment out line which prevents loading bash profile by ssh 
#   lineinfile: state=present dest=/home/{{rem_user}}/.bashrc regexp="^. -z" line='# [ -z "$PS1" ] && return' backrefs=yes
#   when: bashrc_filetype.stat.isreg 
# 
# - name:  chruby | run chruby rehash
#   shell: chruby_ROOT={{chruby_root}} {{chruby_cmd}} rehash 
#   changed_when: false
# 
# - name: chruby  | get chruby_owner
#   shell: stat -c %U /home/{{rem_user}}/.chruby
#   register: chruby_owner
#   changed_when: false
# 
# - name:  chruby | set chruby permissions
#   file:  path={{chruby_root}} recurse=yes group={{rem_user}} owner={{rem_user}} state=directory
#   when:  chruby_owner != rem_user
#   changed_when: false
